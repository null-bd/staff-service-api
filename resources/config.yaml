app:
  name: "microservice-name"
  port: 8080
  version: "1.0.0"
  env: "dev"

auth:
  serviceId: "my-service"
  clientId: "my-client"
  clientSecret: "${CLIENT_SECRET}"
  keycloakUrl: "http://auth-service:8080"
  realm: "my-realm"
  cacheEnabled: true
  cacheUrl: "redis:6379"
  resources:
  # Domain endpoints
  - path: "/api/v1/domains"
    method: "POST"
    roles: ["ADMIN", "ORG_CREATOR"]
    actions: ["create:domain"]

  - path: "/api/v1/domains"
    method: "GET"  
    roles: ["ADMIN", "ORG_ADMIN", "USER"]
    actions: ["read:domain"]

  - path: "/api/v1/domains/:id"
    method: "GET"
    roles: ["ADMIN", "ORG_ADMIN", "USER"]
    actions: ["read:domain"]

  - path: "/api/v1/domains/:id"
    method: "PUT"
    roles: ["ADMIN", "ORG_ADMIN"] 
    actions: ["update:domain"]

  - path: "/api/v1/domains/:id"
    method: "DELETE"
    roles: ["ADMIN"]
    actions: ["delete:domain"]

  publicPaths:
  - path: "/health"
    method: "GET"
  # Temporary public paths until auth is implemented
  - path: "/api/v1/domains"
    method: "POST"
  
database:
  host: "127.0.0.1"
  port: 5432
  user: "postgres"
  password: "postgres"
  dbname: "microservice-template"
  sslmode: "disable"
  max_conns: 10
  timeout: 30

logging:
  level: "info"
  format: "json"